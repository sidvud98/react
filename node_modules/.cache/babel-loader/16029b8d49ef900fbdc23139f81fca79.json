{"ast":null,"code":"import _slicedToArray from \"/Users/siddharthvudikavalasa/final/react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/siddharthvudikavalasa/final/react/src/GetTasks.js\";\nimport React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport ReactPaginate from 'react-paginate';\nimport { login } from \"./features/userSlice\";\n\nfunction GetTasks(_ref) {\n  var _this = this;\n\n  var itemsPerPage = _ref.itemsPerPage;\n\n  var axios = require('axios');\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      js = _useState2[0],\n      setjs = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      val = _useState4[0],\n      setval = _useState4[1];\n\n  var user = useSelector(selectUser);\n  useEffect(function () {\n    axios.get('http://localhost:8000/tasks', {\n      headers: {\n        'Authorization': \"Bearer \" + user.verifytoken\n      }\n    }).then(function (response) {\n      setjs(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search\",\n    onChange: function onChange(e) {\n      e.preventDefault();\n      var finalval = e.target.value;\n      setval(finalval);\n    },\n    type: \"text\",\n    placeholder: \"Search\",\n    value: val,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Title \"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Assignor\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Assignee\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Due Date\")), js.filter(function (post) {\n    if (val === '') {\n      return post;\n    } else if (post.title.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    } else if (post.description.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    } else if (post.created_by.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    } else if (post.assignee.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    } else if (post.status.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    } else if (post.due_date.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    }\n  }).map(function (item) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, item.title), /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, item.description), /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, item.created_by), /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, item.assignee), /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, item.status), /*#__PURE__*/React.createElement(\"th\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, item.due_date));\n  })));\n} // function GetTasks({ itemsPerPage }) {\n//     // const items = [{'name':'aash','email':'xyz'},{'name':'2'},{'name':'3'},{'name':'4'},{'name':'5'},{'name':'6'},{'name':'7'},{'name':'8'}];\n//    // We start with an empty list of items.\n//    const [currentItems, setCurrentItems] = useState(null);\n//    const [pageCount, setPageCount] = useState(0);\n//    // Here we use item offsets; we could also use page offsets\n//    // following the API or data you're working with.\n//    const [itemOffset, setItemOffset] = useState(0);\n//    const axios = require('axios');\n//     const [items,setjs]=useState([]);\n//     const dispatch=useDispatch();\n//     const [val,setval]=useState([]);\n//     const user = useSelector(selectUser);\n//     useEffect(()=>{   \n//       axios.get('http://localhost:8000/tasks',{ headers:\n//       {\n//           'Authorization':\"Bearer \"+ user.verifytoken\n//       }})\n//       .then(function (response) {\n//         console.log(response.data);\n//         dispatch(login({\n//             getdata:response.data\n//         }))\n//         setjs(user.getdata);  \n//         setval(user.getdata);\n//         }) \n//     },[]);\n//   function Items({ currentItems }) {\n//    return (\n//      <div className=\"items\">\n//      {currentItems && currentItems.map((item) => (\n//        <div>\n//          <h3>Item #{item.title}</h3>\n//        </div>\n//      ))}\n//        </div>\n//    );\n//  }\n//    useEffect(() => {\n//      // Fetch items from another resources.\n//      const endOffset = itemOffset + itemsPerPage;\n//      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n//      setCurrentItems(items.slice(itemOffset, endOffset));\n//      setPageCount(Math.ceil(items.length / itemsPerPage));\n//    }, [itemOffset, itemsPerPage]);\n//    // Invoke when user click to request another page.\n//    const handlePageClick = (event) => {\n//      const newOffset = event.selected * itemsPerPage % items.length;\n//      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n//      setItemOffset(newOffset);\n//    };\n//    return (\n//      <>\n//        <Items currentItems={currentItems} />\n//        <ReactPaginate\n//          nextLabel=\"next >\"\n//          onPageChange={handlePageClick}\n//          pageRangeDisplayed={3}\n//          marginPagesDisplayed={2}\n//          pageCount={pageCount}\n//          previousLabel=\"< previous\"\n//          pageClassName=\"page-item\"\n//          pageLinkClassName=\"page-link\"\n//          previousClassName=\"page-item\"\n//          previousLinkClassName=\"page-link\"\n//          nextClassName=\"page-item\"\n//          nextLinkClassName=\"page-link\"\n//          breakLabel=\"...\"\n//          breakClassName=\"page-item\"\n//          breakLinkClassName=\"page-link\"\n//          containerClassName=\"pagination\"\n//          activeClassName=\"active\"\n//          renderOnZeroPageCount={null}\n//        />\n//      </>\n//    );\n//  }\n\n\nexport default GetTasks;","map":{"version":3,"names":["React","Component","useEffect","useState","useDispatch","useSelector","selectUser","ReactPaginate","login","GetTasks","itemsPerPage","axios","require","js","setjs","val","setval","user","get","headers","verifytoken","then","response","data","e","preventDefault","finalval","target","value","filter","post","title","toLowerCase","includes","description","created_by","assignee","status","due_date","map","item","id"],"sources":["/Users/siddharthvudikavalasa/final/react/src/GetTasks.js"],"sourcesContent":["import React, { Component }  from 'react';\nimport {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport ReactPaginate from 'react-paginate';\nimport {login} from \"./features/userSlice\";\nfunction GetTasks({itemsPerPage}) {   \n    const axios = require('axios');\n    const [js,setjs]=useState([]);\n    const [val,setval]=useState('');\n    const user = useSelector(selectUser);\n    useEffect(()=>{   \n      axios.get('http://localhost:8000/tasks',{ headers:\n      {\n          'Authorization':\"Bearer \"+ user.verifytoken\n      }})\n      .then(function (response) {\n        setjs(response.data);  \n        }) \n    },[]);\n \n   return (\n    <div>\n       \n        <input className='search' onChange={(e)=>{e.preventDefault();const finalval=e.target.value;setval(finalval);}} type=\"text\" placeholder=\"Search\" value={val} />\n      <table>\n        <tr>\n          <td>Title </td>\n          <td>Description</td>\n          <td>Assignor</td>\n          <td>Assignee</td>\n          <td>Status</td>\n          <td>Due Date</td>\n        </tr>\n      {js.filter(post => {\n    if (val === '') {\n      return post;\n    } else if (post.title.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    }\n    else if (post.description.toLowerCase().includes(val.toLowerCase())) {\n        return post;\n      }\n      else if (post.created_by.toLowerCase().includes(val.toLowerCase())) {\n        return post;\n      }\n      else if (post.assignee.toLowerCase().includes(val.toLowerCase())) {\n        return post;\n      }\n      else if (post.status.toLowerCase().includes(val.toLowerCase())) {\n        return post;\n      }\n      else if (post.due_date.toLowerCase().includes(val.toLowerCase())) {\n        return post;\n      }\n  }).map((item)=>{\n        return(               \n            <tr key={item.id}>\n              <th>{item.title}</th>\n              <th>{item.description}</th>\n              <th>{item.created_by}</th>\n              <th>{item.assignee}</th>\n              <th>{item.status}</th>\n              <th>{item.due_date}</th>\n            </tr>  \n          \n        )\n      })}     \n      </table>  \n    </div>   \n    )\n}\n// function GetTasks({ itemsPerPage }) {\n\n//     // const items = [{'name':'aash','email':'xyz'},{'name':'2'},{'name':'3'},{'name':'4'},{'name':'5'},{'name':'6'},{'name':'7'},{'name':'8'}];\n//    // We start with an empty list of items.\n//    const [currentItems, setCurrentItems] = useState(null);\n//    const [pageCount, setPageCount] = useState(0);\n//    // Here we use item offsets; we could also use page offsets\n//    // following the API or data you're working with.\n//    const [itemOffset, setItemOffset] = useState(0);\n//    const axios = require('axios');\n//     const [items,setjs]=useState([]);\n//     const dispatch=useDispatch();\n//     const [val,setval]=useState([]);\n//     const user = useSelector(selectUser);\n//     useEffect(()=>{   \n//       axios.get('http://localhost:8000/tasks',{ headers:\n//       {\n//           'Authorization':\"Bearer \"+ user.verifytoken\n//       }})\n//       .then(function (response) {\n//         console.log(response.data);\n//         dispatch(login({\n//             getdata:response.data\n//         }))\n//         setjs(user.getdata);  \n//         setval(user.getdata);\n//         }) \n//     },[]);\n//   function Items({ currentItems }) {\n  \n//    return (\n//      <div className=\"items\">\n//      {currentItems && currentItems.map((item) => (\n//        <div>\n//          <h3>Item #{item.title}</h3>\n//        </div>\n//      ))}\n//        </div>\n//    );\n//  }\n//    useEffect(() => {\n//      // Fetch items from another resources.\n//      const endOffset = itemOffset + itemsPerPage;\n//      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n//      setCurrentItems(items.slice(itemOffset, endOffset));\n//      setPageCount(Math.ceil(items.length / itemsPerPage));\n//    }, [itemOffset, itemsPerPage]);\n \n//    // Invoke when user click to request another page.\n//    const handlePageClick = (event) => {\n//      const newOffset = event.selected * itemsPerPage % items.length;\n//      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n//      setItemOffset(newOffset);\n//    };\n  \n//    return (\n//      <>\n//        <Items currentItems={currentItems} />\n//        <ReactPaginate\n//          nextLabel=\"next >\"\n//          onPageChange={handlePageClick}\n//          pageRangeDisplayed={3}\n//          marginPagesDisplayed={2}\n//          pageCount={pageCount}\n//          previousLabel=\"< previous\"\n//          pageClassName=\"page-item\"\n//          pageLinkClassName=\"page-link\"\n//          previousClassName=\"page-item\"\n//          previousLinkClassName=\"page-link\"\n//          nextClassName=\"page-item\"\n//          nextLinkClassName=\"page-link\"\n//          breakLabel=\"...\"\n//          breakClassName=\"page-item\"\n//          breakLinkClassName=\"page-link\"\n//          containerClassName=\"pagination\"\n//          activeClassName=\"active\"\n//          renderOnZeroPageCount={null}\n//        />\n//      </>\n//    );\n//  }\nexport default GetTasks;\n"],"mappings":"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MAAA;IAAA,GAAKD,IAAI,CAACT,KAAV,CADF,eAEE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKS,IAAI,CAACN,WAAV,CAFF,eAGE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKM,IAAI,CAACL,UAAV,CAHF,eAIE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKK,IAAI,CAACJ,QAAV,CAJF,eAKE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKI,IAAI,CAACH,MAAV,CALF,eAME;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKG,IAAI,CAACF,QAAV,CANF,CADJ;EAWD,CAjCA,CATD,CAHF,CADD;AAkDF,C,CACD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe7B,QAAf"},"metadata":{},"sourceType":"module"}