{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthvudikavalasa/final/react/src/GetUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GetUsers(_ref) {\n  _s();\n\n  let {\n    itemsPerPage\n  } = _ref;\n\n  const axios = require('axios');\n\n  const [js, setjs] = useState([]);\n  const [val, setval] = useState('');\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/users', {\n      headers: {\n        'Authorization': \"Bearer \" + user.verifytoken\n      }\n    }).then(function (response) {\n      setjs(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      onChange: e => {\n        e.preventDefault();\n        const finalval = e.target.value;\n        setval(finalval);\n      },\n      type: \"text\",\n      placeholder: \"Search\",\n      value: val\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), js.filter(post => {\n        if (val === '') {\n          return post;\n        } else if (post.name.toLowerCase().includes(val.toLowerCase())) {\n          return post;\n        } else if (post.email.toLowerCase().includes(val.toLowerCase())) {\n          return post;\n        } else if (post.role.toLowerCase().includes(val.toLowerCase())) {\n          return post;\n        }\n      }).map(item => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [item.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: item.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: item.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n} // function GetUsers({itemsPerPage}) {   \n//   const axios = require('axios');\n//   const [js,setjs]=useState([]);\n//   const [val,setval]=useState('');\n//   const dispatch=useDispatch();\n//   const user = useSelector(selectUser);\n//   const emptyarr=[];\n//   useEffect(()=>{   \n//     axios.get('http://localhost:8000/api/users',{headers:\n//     {\n//         'Authorization':\"Bearer \"+ user.verifytoken\n//     }})\n//     .then(function (response) {\n//       console.log(response.data);\n//       let x=Object.keys(response.data).length; \n//       for(var i=0;i<x;i++){\n//         emptyarr.push({'Name':response.data[i]['name'],'Email':response.data[i]['email'],'Role':response.data[i]['role']})\n//       } \n//       if(emptyarr.length===x)setjs(emptyarr);   \n//       }) \n//   },[]);\n//  return (\n//   <div>\n//       <input className='search' onChange={(e)=>{e.preventDefault();const finalval=e.target.value;setval(finalval);}} type=\"text\" placeholder=\"Search\" value={val} />\n//     <table>\n//       <tr>\n//         <td>Name </td>\n//         <td>Email</td>\n//         <td>Role</td>\n//       </tr>\n//     {js.filter(post => {\n//   if (val === '') {\n//     return post;\n//   } else if (post.Name.toLowerCase().includes(val.toLowerCase())) {\n//     return post;\n//   }\n// }).map((item)=>{\n//       return(               \n//           <tr key={item.id}>\n//             <th>{item.Name}</th>\n//             <th>{item.Email}</th>\n//             <th>{item.Role}</th>\n//           </tr>  \n//       )\n//     })}     \n//     </table>  \n//   </div>   \n//   )\n// }\n// function GetUsers({ itemsPerPage }) {\n//   const axios = require('axios');\n//     const [items,setitems]=useState([]);\n//     const [val,setval]=useState('');\n//     const user = useSelector(selectUser);\n//     const emptyarr=[];\n//     useEffect(()=>{   \n//       axios.get('http://localhost:8000/api/users',{headers:\n//       {\n//           'Authorization':\"Bearer\"+ user.verifytoken\n//       }})\n//       .then(function (response) {\n//         let x=Object.keys(response.data).length; \n//         for(var i=0;i<x;i++){\n//           emptyarr.push({'Name':response.data[i]['name'],'Email':response.data[i]['email'],'Role':response.data[i]['role']})\n//         } \n//         if(emptyarr.length===x)setitems(emptyarr);   \n//         }) \n//     },[]);\n//  // We start with an empty list of items.\n//  const [currentItems, setCurrentItems] = useState(null);\n//  const [pageCount, setPageCount] = useState(0);\n//  // Here we use item offsets; we could also use page offsets\n//  // following the API or data you're working with.\n//  const [itemOffset, setItemOffset] = useState(0);\n// function Items({ currentItems }) {\n//   console.log(\"I am in Items\");\n//  console.log(currentItems);\n//  return (\n//    <div className=\"items\">\n//     <table>\n//         <tr>\n//           <td>Name</td>\n//           <td>Email</td>\n//           <td>Role</td>\n//         </tr>\n//         </table>\n//    {currentItems && currentItems.map((item) => (\n//      <div>\n//        <h3>Item #{item.name} with email {item.email}</h3>\n//      </div>\n//    ))}\n//      </div>\n//  );\n// }\n//  useEffect(() => {\n//    // Fetch items from another resources.\n//    const endOffset = itemOffset + itemsPerPage;\n//    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n//    setCurrentItems(items.slice(itemOffset, endOffset));\n//    setPageCount(Math.ceil(items.length / itemsPerPage));\n//  }, [itemOffset, itemsPerPage]);\n//  // Invoke when user click to request another page.\n//  const handlePageClick = (event) => {\n//    const newOffset = event.selected * itemsPerPage % items.length;\n//    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n//    setItemOffset(newOffset);\n//  };\n//  return (\n//    <>\n//      <Items currentItems={currentItems} />\n//      <ReactPaginate\n//        nextLabel=\"next >\"\n//        onPageChange={handlePageClick}\n//        pageRangeDisplayed={3}\n//        marginPagesDisplayed={2}\n//        pageCount={pageCount}\n//        previousLabel=\"< previous\"\n//        pageClassName=\"page-item\"\n//        pageLinkClassName=\"page-link\"\n//        previousClassName=\"page-item\"\n//        previousLinkClassName=\"page-link\"\n//        nextClassName=\"page-item\"\n//        nextLinkClassName=\"page-link\"\n//        breakLabel=\"...\"\n//        breakClassName=\"page-item\"\n//        breakLinkClassName=\"page-link\"\n//        containerClassName=\"pagination\"\n//        activeClassName=\"active\"\n//        renderOnZeroPageCount={null}\n//      />\n//    </>\n//  );\n// }\n\n\n_s(GetUsers, \"WEpYP7rwhMf8tvznwGDnhnppscM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GetUsers;\nexport default GetUsers; // else if (post.Email.toLowerCase().includes(val.toLowerCase())) {\n//   return post;\n// }else if (post.Role.toLowerCase().includes(val.toLowerCase())) {\n//   return post;\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUsers\");","map":{"version":3,"names":["React","Component","useEffect","useState","useDispatch","useSelector","selectUser","ReactDOM","ReactPaginate","GetUsers","itemsPerPage","axios","require","js","setjs","val","setval","dispatch","user","get","headers","verifytoken","then","response","data","e","preventDefault","finalval","target","value","filter","post","name","toLowerCase","includes","email","role","map","item","id"],"sources":["/Users/siddharthvudikavalasa/final/react/src/GetUsers.js"],"sourcesContent":["import React, { Component }  from 'react';\nimport {useEffect, useState} from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\n\nimport ReactDOM from 'react-dom';\nimport ReactPaginate from 'react-paginate';\n\nfunction GetUsers({itemsPerPage}) {   \n    const axios = require('axios');\n    const [js,setjs]=useState([]);\n    const [val,setval]=useState('');\n    const dispatch=useDispatch();\n    const user = useSelector(selectUser);\n    useEffect(()=>{   \n      axios.get('http://localhost:8000/api/users',{headers:\n      {\n          'Authorization':\"Bearer \"+ user.verifytoken\n      }})\n      .then(function (response) {\n            setjs(response.data);   \n        }) \n    },[]);\n \n   return (\n    <div>\n        <input className='search' onChange={(e)=>{e.preventDefault();const finalval=e.target.value;setval(finalval);}} type=\"text\" placeholder=\"Search\" value={val} />\n      <table>\n        <tr>\n      <td>Id</td>\n          <td>Name </td>\n          <td>Email</td>\n          <td>Role</td>\n        </tr>\n      {js.filter(post => {\n     \n    if (val === '') {\n      return post;\n    } else if (post.name.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    }\n    else if (post.email.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    }\n    else if (post.role.toLowerCase().includes(val.toLowerCase())) {\n      return post;\n    }\n  }).map((item)=>{\n        return(               \n            <tr key={item.id}>\n           <th>{item.id}</th>\n              <th>{item.name} </th>\n              <th>{item.email}</th>\n              <th>{item.role}</th>\n            </tr>  \n          \n        )\n      })}     \n      </table>  \n    </div>   \n    )\n}\n// function GetUsers({itemsPerPage}) {   \n//   const axios = require('axios');\n//   const [js,setjs]=useState([]);\n//   const [val,setval]=useState('');\n//   const dispatch=useDispatch();\n//   const user = useSelector(selectUser);\n//   const emptyarr=[];\n//   useEffect(()=>{   \n//     axios.get('http://localhost:8000/api/users',{headers:\n//     {\n//         'Authorization':\"Bearer \"+ user.verifytoken\n//     }})\n//     .then(function (response) {\n//       console.log(response.data);\n//       let x=Object.keys(response.data).length; \n//       for(var i=0;i<x;i++){\n//         emptyarr.push({'Name':response.data[i]['name'],'Email':response.data[i]['email'],'Role':response.data[i]['role']})\n//       } \n//       if(emptyarr.length===x)setjs(emptyarr);   \n//       }) \n//   },[]);\n\n//  return (\n//   <div>\n//       <input className='search' onChange={(e)=>{e.preventDefault();const finalval=e.target.value;setval(finalval);}} type=\"text\" placeholder=\"Search\" value={val} />\n//     <table>\n//       <tr>\n//         <td>Name </td>\n//         <td>Email</td>\n//         <td>Role</td>\n//       </tr>\n//     {js.filter(post => {\n//   if (val === '') {\n//     return post;\n//   } else if (post.Name.toLowerCase().includes(val.toLowerCase())) {\n//     return post;\n//   }\n// }).map((item)=>{\n//       return(               \n//           <tr key={item.id}>\n//             <th>{item.Name}</th>\n//             <th>{item.Email}</th>\n//             <th>{item.Role}</th>\n//           </tr>  \n        \n//       )\n//     })}     \n//     </table>  \n//   </div>   \n//   )\n// }\n// function GetUsers({ itemsPerPage }) {\n//   const axios = require('axios');\n//     const [items,setitems]=useState([]);\n//     const [val,setval]=useState('');\n//     const user = useSelector(selectUser);\n//     const emptyarr=[];\n//     useEffect(()=>{   \n//       axios.get('http://localhost:8000/api/users',{headers:\n//       {\n//           'Authorization':\"Bearer\"+ user.verifytoken\n//       }})\n//       .then(function (response) {\n//         let x=Object.keys(response.data).length; \n//         for(var i=0;i<x;i++){\n//           emptyarr.push({'Name':response.data[i]['name'],'Email':response.data[i]['email'],'Role':response.data[i]['role']})\n//         } \n//         if(emptyarr.length===x)setitems(emptyarr);   \n//         }) \n//     },[]);\n//  // We start with an empty list of items.\n//  const [currentItems, setCurrentItems] = useState(null);\n//  const [pageCount, setPageCount] = useState(0);\n//  // Here we use item offsets; we could also use page offsets\n//  // following the API or data you're working with.\n//  const [itemOffset, setItemOffset] = useState(0);\n// function Items({ currentItems }) {\n//   console.log(\"I am in Items\");\n//  console.log(currentItems);\n//  return (\n  \n  \n//    <div className=\"items\">\n//     <table>\n//         <tr>\n//           <td>Name</td>\n//           <td>Email</td>\n//           <td>Role</td>\n//         </tr>\n//         </table>\n//    {currentItems && currentItems.map((item) => (\n//      <div>\n//        <h3>Item #{item.name} with email {item.email}</h3>\n//      </div>\n//    ))}\n//      </div>\n//  );\n// }\n//  useEffect(() => {\n//    // Fetch items from another resources.\n//    const endOffset = itemOffset + itemsPerPage;\n//    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n//    setCurrentItems(items.slice(itemOffset, endOffset));\n//    setPageCount(Math.ceil(items.length / itemsPerPage));\n//  }, [itemOffset, itemsPerPage]);\n\n//  // Invoke when user click to request another page.\n//  const handlePageClick = (event) => {\n//    const newOffset = event.selected * itemsPerPage % items.length;\n//    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n//    setItemOffset(newOffset);\n//  };\n\n//  return (\n//    <>\n//      <Items currentItems={currentItems} />\n//      <ReactPaginate\n//        nextLabel=\"next >\"\n//        onPageChange={handlePageClick}\n//        pageRangeDisplayed={3}\n//        marginPagesDisplayed={2}\n//        pageCount={pageCount}\n//        previousLabel=\"< previous\"\n//        pageClassName=\"page-item\"\n//        pageLinkClassName=\"page-link\"\n//        previousClassName=\"page-item\"\n//        previousLinkClassName=\"page-link\"\n//        nextClassName=\"page-item\"\n//        nextLinkClassName=\"page-link\"\n//        breakLabel=\"...\"\n//        breakClassName=\"page-item\"\n//        breakLinkClassName=\"page-link\"\n//        containerClassName=\"pagination\"\n//        activeClassName=\"active\"\n//        renderOnZeroPageCount={null}\n//      />\n//    </>\n//  );\n// }\nexport default GetUsers;\n\n// else if (post.Email.toLowerCase().includes(val.toLowerCase())) {\n//   return post;\n// }else if (post.Role.toLowerCase().includes(val.toLowerCase())) {\n//   return post;\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module"}