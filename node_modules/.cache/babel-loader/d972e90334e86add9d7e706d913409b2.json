{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n/**\r\n * This class represents a basic channel.\r\n */\n\n\nvar Channel = /*#__PURE__*/function () {\n  function Channel() {\n    _classCallCheck(this, Channel);\n  }\n\n  _createClass(Channel, [{\n    key: \"listenForWhisper\",\n    value:\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\n    function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"notification\",\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningForWhisper\",\n    value: function stopListeningForWhisper(event, callback) {\n      return this.stopListening('.client-' + event, callback);\n    }\n  }]);\n\n  return Channel;\n}();\n/**\r\n * Event name formatter\r\n */\n\n\nvar EventFormatter = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function EventFormatter(namespace) {\n    _classCallCheck(this, EventFormatter);\n\n    this.setNamespace(namespace);\n  }\n  /**\r\n   * Format the given event name.\r\n   */\n\n\n  _createClass(EventFormatter, [{\n    key: \"format\",\n    value: function format(event) {\n      if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n        return event.substr(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\r\n     * Set the event namespace.\r\n     */\n\n  }, {\n    key: \"setNamespace\",\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n\n  return EventFormatter;\n}();\n/**\r\n * This class represents a Pusher channel.\r\n */\n\n\nvar PusherChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PusherChannel, _Channel);\n\n  var _super = _createSuper(PusherChannel);\n  /**\r\n   * Create a new class instance.\r\n   */\n\n\n  function PusherChannel(pusher, name, options) {\n    var _this;\n\n    _classCallCheck(this, PusherChannel);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n\n  _createClass(PusherChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      var _this2 = this;\n\n      this.subscription.bind_global(function (event, data) {\n        if (event.startsWith('pusher:')) {\n          return;\n        }\n\n        var namespace = _this2.options.namespace.replace(/\\./g, '\\\\');\n\n        var formattedEvent = event.startsWith(namespace) ? event.substring(namespace.length + 1) : '.' + event;\n        callback(formattedEvent, data);\n      });\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      if (callback) {\n        this.subscription.unbind(this.eventFormatter.format(event), callback);\n      } else {\n        this.subscription.unbind(this.eventFormatter.format(event));\n      }\n\n      return this;\n    }\n    /**\r\n     * Stop listening for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningToAll\",\n    value: function stopListeningToAll(callback) {\n      if (callback) {\n        this.subscription.unbind_global(callback);\n      } else {\n        this.subscription.unbind_global();\n      }\n\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('pusher:subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('pusher:subscription_error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n\n  return PusherChannel;\n}(Channel);\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\n\nvar PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPrivateChannel);\n\n  function PusherPrivateChannel() {\n    _classCallCheck(this, PusherPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPrivateChannel;\n}(PusherChannel);\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\n\nvar PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherEncryptedPrivateChannel);\n\n  function PusherEncryptedPrivateChannel() {\n    _classCallCheck(this, PusherEncryptedPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherEncryptedPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherEncryptedPrivateChannel;\n}(PusherChannel);\n/**\r\n * This class represents a Pusher presence channel.\r\n */\n\n\nvar PusherPresenceChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPresenceChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPresenceChannel);\n\n  function PusherPresenceChannel() {\n    _classCallCheck(this, PusherPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPresenceChannel;\n}(PusherChannel);\n/**\r\n * This class represents a Socket.io channel.\r\n */\n\n\nvar SocketIoChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(SocketIoChannel, _Channel);\n\n  var _super = _createSuper(SocketIoChannel);\n  /**\r\n   * Create a new class instance.\r\n   */\n\n\n  function SocketIoChannel(socket, name, options) {\n    var _this;\n\n    _classCallCheck(this, SocketIoChannel);\n\n    _this = _super.call(this);\n    /**\r\n     * The event callbacks applied to the socket.\r\n     */\n\n    _this.events = {};\n    /**\r\n     * User supplied callbacks for events on this channel.\r\n     */\n\n    _this.listeners = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Socket.io channel.\r\n   */\n\n\n  _createClass(SocketIoChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Unsubscribe from channel and ubind event callbacks.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.unbindEvent(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('connect', function (socket) {\n        callback(socket);\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind the channel's socket to an event and store the callback.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (!this.events[event]) {\n        this.events[event] = function (channel, data) {\n          if (_this2.name === channel && _this2.listeners[event]) {\n            _this2.listeners[event].forEach(function (cb) {\n              return cb(data);\n            });\n          }\n        };\n\n        this.socket.on(event, this.events[event]);\n      }\n\n      this.listeners[event].push(callback);\n      return this;\n    }\n    /**\r\n     * Unbind the channel's socket from all stored event callbacks.\r\n     */\n\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var _this3 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this3.unbindEvent(event);\n      });\n    }\n    /**\r\n     * Unbind the listeners for the given event.\r\n     */\n\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(event, callback) {\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (callback) {\n        this.listeners[event] = this.listeners[event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n\n      if (!callback || this.listeners[event].length === 0) {\n        if (this.events[event]) {\n          this.socket.removeListener(event, this.events[event]);\n          delete this.events[event];\n        }\n\n        delete this.listeners[event];\n      }\n    }\n  }]);\n\n  return SocketIoChannel;\n}(Channel);\n/**\r\n * This class represents a Socket.io private channel.\r\n */\n\n\nvar SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {\n  _inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n  var _super = _createSuper(SocketIoPrivateChannel);\n\n  function SocketIoPrivateChannel() {\n    _classCallCheck(this, SocketIoPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n/**\r\n * This class represents a Socket.io presence channel.\r\n */\n\n\nvar SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {\n  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n  var _super = _createSuper(SocketIoPresenceChannel);\n\n  function SocketIoPresenceChannel() {\n    _classCallCheck(this, SocketIoPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n/**\r\n * This class represents a null channel.\r\n */\n\n\nvar NullChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(NullChannel, _Channel);\n\n  var _super = _createSuper(NullChannel);\n\n  function NullChannel() {\n    _classCallCheck(this, NullChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullChannel, [{\n    key: \"subscribe\",\n    value:\n    /**\r\n     * Subscribe to a channel.\r\n     */\n    function subscribe() {//\n    }\n    /**\r\n     * Unsubscribe from a channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {//\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n\n  return NullChannel;\n}(Channel);\n/**\r\n * This class represents a null private channel.\r\n */\n\n\nvar NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPrivateChannel, _NullChannel);\n\n  var _super = _createSuper(NullPrivateChannel);\n\n  function NullPrivateChannel() {\n    _classCallCheck(this, NullPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPrivateChannel;\n}(NullChannel);\n/**\r\n * This class represents a null presence channel.\r\n */\n\n\nvar NullPresenceChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPresenceChannel, _NullChannel);\n\n  var _super = _createSuper(NullPresenceChannel);\n\n  function NullPresenceChannel() {\n    _classCallCheck(this, NullPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      return this;\n    }\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPresenceChannel;\n}(NullChannel);\n\nvar Connector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Connector(options) {\n    _classCallCheck(this, Connector);\n    /**\r\n     * Default connector options.\r\n     */\n\n\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      userAuthentication: {\n        endpoint: '/broadcasting/user-auth',\n        headers: {}\n      },\n      broadcaster: 'pusher',\n      csrfToken: null,\n      bearerToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\r\n   * Merge the custom options with the defaults.\r\n   */\n\n\n  _createClass(Connector, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n      var token = this.csrfToken();\n\n      if (token) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = token;\n        this.options.userAuthentication.headers['X-CSRF-TOKEN'] = token;\n      }\n\n      token = this.options.bearerToken;\n\n      if (token) {\n        this.options.auth.headers['Authorization'] = 'Bearer ' + token;\n        this.options.userAuthentication.headers['Authorization'] = 'Bearer ' + token;\n      }\n\n      return options;\n    }\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\n\n  }, {\n    key: \"csrfToken\",\n    value: function csrfToken() {\n      var selector;\n\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n\n      return null;\n    }\n  }]);\n\n  return Connector;\n}();\n/**\r\n * This class creates a connector to Pusher.\r\n */\n\n\nvar PusherConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(PusherConnector, _Connector);\n\n  var _super = _createSuper(PusherConnector);\n\n  function PusherConnector() {\n    var _this;\n\n    _classCallCheck(this, PusherConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Pusher connection.\r\n   */\n\n\n  _createClass(PusherConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\r\n     * Sign in the user via Pusher user authentication (https://pusher.com/docs/channels/using_channels/user-authentication/).\r\n     */\n\n  }, {\n    key: \"signin\",\n    value: function signin() {\n      this.pusher.signin();\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      if (!this.channels['private-encrypted-' + name]) {\n        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);\n      }\n\n      return this.channels['private-encrypted-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'private-encrypted-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\r\n     * Disconnect Pusher connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return PusherConnector;\n}(Connector);\n/**\r\n * This class creates a connnector to a Socket.io server.\r\n */\n\n\nvar SocketIoConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(SocketIoConnector, _Connector);\n\n  var _super = _createSuper(SocketIoConnector);\n\n  function SocketIoConnector() {\n    var _this;\n\n    _classCallCheck(this, SocketIoConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n\n  _createClass(SocketIoConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      this.socket.on('reconnect', function () {\n        Object.values(_this2.channels).forEach(function (channel) {\n          channel.subscribe();\n        });\n      });\n      return this.socket;\n    }\n    /**\r\n     * Get socket.io module from global scope or options.\r\n     */\n\n  }, {\n    key: \"getSocketIO\",\n    value: function getSocketIO() {\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this3 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this3.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\r\n     * Disconnect Socketio connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n\n  return SocketIoConnector;\n}(Connector);\n/**\r\n * This class creates a null connector.\r\n */\n\n\nvar NullConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(NullConnector, _Connector);\n\n  var _super = _createSuper(NullConnector);\n\n  function NullConnector() {\n    var _this;\n\n    _classCallCheck(this, NullConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh connection.\r\n   */\n\n\n  _createClass(NullConnector, [{\n    key: \"connect\",\n    value: function connect() {//\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {//\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {//\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\r\n     * Disconnect the connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {//\n    }\n  }]);\n\n  return NullConnector;\n}(Connector);\n/**\r\n * This class is the primary API for interacting with broadcasting.\r\n */\n\n\nvar Echo = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Echo(options) {\n    _classCallCheck(this, Echo);\n\n    this.options = options;\n    this.connect();\n\n    if (!this.options.withoutInterceptors) {\n      this.registerInterceptors();\n    }\n  }\n  /**\r\n   * Get a channel instance by name.\r\n   */\n\n\n  _createClass(Echo, [{\n    key: \"channel\",\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\r\n     * Create a new connection.\r\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      } else if (typeof this.options.broadcaster == 'function') {\n        this.connector = new this.options.broadcaster(this.options);\n      }\n    }\n    /**\r\n     * Disconnect from the Echo server.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"private\",\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivate\",\n    value: function encryptedPrivate(channel) {\n      return this.connector.encryptedPrivateChannel(channel);\n    }\n    /**\r\n     * Get the Socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\r\n     * Register 3rd party request interceptiors. These are used to automatically\r\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\r\n     */\n\n  }, {\n    key: \"registerInterceptors\",\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n\n      if ((typeof Turbo === \"undefined\" ? \"undefined\" : _typeof(Turbo)) === 'object') {\n        this.registerTurboRequestInterceptor();\n      }\n    }\n    /**\r\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerVueRequestInterceptor\",\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n\n        next();\n      });\n    }\n    /**\r\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerAxiosRequestInterceptor\",\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n\n        return config;\n      });\n    }\n    /**\r\n     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerjQueryAjaxSetup\",\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (_this3.socketId()) {\n            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n          }\n        });\n      }\n    }\n    /**\r\n     * Register the Turbo Request interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerTurboRequestInterceptor\",\n    value: function registerTurboRequestInterceptor() {\n      var _this4 = this;\n\n      document.addEventListener('turbo:before-fetch-request', function (event) {\n        event.detail.fetchOptions.headers['X-Socket-Id'] = _this4.socketId();\n      });\n    }\n  }]);\n\n  return Echo;\n}();\n\nexport { Channel, Echo as default };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_extends","assign","arguments","source","hasOwnProperty","call","apply","_inherits","subClass","superClass","create","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","Channel","listenForWhisper","event","callback","listen","notification","stopListeningForWhisper","stopListening","EventFormatter","namespace","setNamespace","format","charAt","substr","replace","PusherChannel","_Channel","_super","pusher","name","options","_this","eventFormatter","subscribe","subscription","unsubscribe","on","listenToAll","_this2","bind_global","data","startsWith","formattedEvent","substring","unbind","stopListeningToAll","unbind_global","subscribed","error","status","bind","PusherPrivateChannel","_PusherChannel","whisper","eventName","channels","trigger","concat","PusherEncryptedPrivateChannel","PusherPresenceChannel","here","keys","members","map","k","joining","member","info","leaving","SocketIoChannel","socket","events","listeners","emit","channel","auth","unbindEvent","forEach","cb","push","_this3","filter","removeListener","SocketIoPrivateChannel","_SocketIoChannel","SocketIoPresenceChannel","_SocketIoPrivateChann","m","user_info","NullChannel","NullPrivateChannel","_NullChannel","NullPresenceChannel","Connector","_defaultOptions","headers","authEndpoint","userAuthentication","endpoint","broadcaster","csrfToken","bearerToken","host","setOptions","connect","token","selector","window","document","querySelector","getAttribute","PusherConnector","_Connector","client","Pusher","signin","privateChannel","encryptedPrivateChannel","presenceChannel","leave","index","leaveChannel","socketId","connection","socket_id","disconnect","SocketIoConnector","io","getSocketIO","values","Error","id","NullConnector","Echo","withoutInterceptors","registerInterceptors","_channel","connector","join","_private","encryptedPrivate","Vue","http","registerVueRequestInterceptor","axios","registerAxiosRequestInterceptor","jQuery","registerjQueryAjaxSetup","Turbo","registerTurboRequestInterceptor","interceptors","request","next","set","use","config","ajax","ajaxPrefilter","originalOptions","xhr","setRequestHeader","_this4","addEventListener","detail","fetchOptions","default"],"sources":["/Users/siddharthvudikavalasa/final/react/node_modules/laravel-echo/dist/echo.js"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\n/**\r\n * This class represents a basic channel.\r\n */\nvar Channel = /*#__PURE__*/function () {\n  function Channel() {\n    _classCallCheck(this, Channel);\n  }\n\n  _createClass(Channel, [{\n    key: \"listenForWhisper\",\n    value:\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\n    function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"notification\",\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningForWhisper\",\n    value: function stopListeningForWhisper(event, callback) {\n      return this.stopListening('.client-' + event, callback);\n    }\n  }]);\n\n  return Channel;\n}();\n\n/**\r\n * Event name formatter\r\n */\nvar EventFormatter = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function EventFormatter(namespace) {\n    _classCallCheck(this, EventFormatter);\n\n    this.setNamespace(namespace);\n  }\n  /**\r\n   * Format the given event name.\r\n   */\n\n\n  _createClass(EventFormatter, [{\n    key: \"format\",\n    value: function format(event) {\n      if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n        return event.substr(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\r\n     * Set the event namespace.\r\n     */\n\n  }, {\n    key: \"setNamespace\",\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n\n  return EventFormatter;\n}();\n\n/**\r\n * This class represents a Pusher channel.\r\n */\n\nvar PusherChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PusherChannel, _Channel);\n\n  var _super = _createSuper(PusherChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function PusherChannel(pusher, name, options) {\n    var _this;\n\n    _classCallCheck(this, PusherChannel);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n\n  _createClass(PusherChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      var _this2 = this;\n\n      this.subscription.bind_global(function (event, data) {\n        if (event.startsWith('pusher:')) {\n          return;\n        }\n\n        var namespace = _this2.options.namespace.replace(/\\./g, '\\\\');\n\n        var formattedEvent = event.startsWith(namespace) ? event.substring(namespace.length + 1) : '.' + event;\n        callback(formattedEvent, data);\n      });\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      if (callback) {\n        this.subscription.unbind(this.eventFormatter.format(event), callback);\n      } else {\n        this.subscription.unbind(this.eventFormatter.format(event));\n      }\n\n      return this;\n    }\n    /**\r\n     * Stop listening for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningToAll\",\n    value: function stopListeningToAll(callback) {\n      if (callback) {\n        this.subscription.unbind_global(callback);\n      } else {\n        this.subscription.unbind_global();\n      }\n\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('pusher:subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('pusher:subscription_error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n\n  return PusherChannel;\n}(Channel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPrivateChannel);\n\n  function PusherPrivateChannel() {\n    _classCallCheck(this, PusherPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherEncryptedPrivateChannel);\n\n  function PusherEncryptedPrivateChannel() {\n    _classCallCheck(this, PusherEncryptedPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherEncryptedPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherEncryptedPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher presence channel.\r\n */\n\nvar PusherPresenceChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPresenceChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPresenceChannel);\n\n  function PusherPresenceChannel() {\n    _classCallCheck(this, PusherPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPresenceChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Socket.io channel.\r\n */\n\nvar SocketIoChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(SocketIoChannel, _Channel);\n\n  var _super = _createSuper(SocketIoChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function SocketIoChannel(socket, name, options) {\n    var _this;\n\n    _classCallCheck(this, SocketIoChannel);\n\n    _this = _super.call(this);\n    /**\r\n     * The event callbacks applied to the socket.\r\n     */\n\n    _this.events = {};\n    /**\r\n     * User supplied callbacks for events on this channel.\r\n     */\n\n    _this.listeners = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Socket.io channel.\r\n   */\n\n\n  _createClass(SocketIoChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Unsubscribe from channel and ubind event callbacks.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.unbindEvent(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('connect', function (socket) {\n        callback(socket);\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind the channel's socket to an event and store the callback.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (!this.events[event]) {\n        this.events[event] = function (channel, data) {\n          if (_this2.name === channel && _this2.listeners[event]) {\n            _this2.listeners[event].forEach(function (cb) {\n              return cb(data);\n            });\n          }\n        };\n\n        this.socket.on(event, this.events[event]);\n      }\n\n      this.listeners[event].push(callback);\n      return this;\n    }\n    /**\r\n     * Unbind the channel's socket from all stored event callbacks.\r\n     */\n\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var _this3 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this3.unbindEvent(event);\n      });\n    }\n    /**\r\n     * Unbind the listeners for the given event.\r\n     */\n\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(event, callback) {\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (callback) {\n        this.listeners[event] = this.listeners[event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n\n      if (!callback || this.listeners[event].length === 0) {\n        if (this.events[event]) {\n          this.socket.removeListener(event, this.events[event]);\n          delete this.events[event];\n        }\n\n        delete this.listeners[event];\n      }\n    }\n  }]);\n\n  return SocketIoChannel;\n}(Channel);\n\n/**\r\n * This class represents a Socket.io private channel.\r\n */\n\nvar SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {\n  _inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n  var _super = _createSuper(SocketIoPrivateChannel);\n\n  function SocketIoPrivateChannel() {\n    _classCallCheck(this, SocketIoPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\n/**\r\n * This class represents a Socket.io presence channel.\r\n */\n\nvar SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {\n  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n  var _super = _createSuper(SocketIoPresenceChannel);\n\n  function SocketIoPresenceChannel() {\n    _classCallCheck(this, SocketIoPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\n/**\r\n * This class represents a null channel.\r\n */\n\nvar NullChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(NullChannel, _Channel);\n\n  var _super = _createSuper(NullChannel);\n\n  function NullChannel() {\n    _classCallCheck(this, NullChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullChannel, [{\n    key: \"subscribe\",\n    value:\n    /**\r\n     * Subscribe to a channel.\r\n     */\n    function subscribe() {//\n    }\n    /**\r\n     * Unsubscribe from a channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {//\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n\n  return NullChannel;\n}(Channel);\n\n/**\r\n * This class represents a null private channel.\r\n */\n\nvar NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPrivateChannel, _NullChannel);\n\n  var _super = _createSuper(NullPrivateChannel);\n\n  function NullPrivateChannel() {\n    _classCallCheck(this, NullPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n    function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPrivateChannel;\n}(NullChannel);\n\n/**\r\n * This class represents a null presence channel.\r\n */\n\nvar NullPresenceChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPresenceChannel, _NullChannel);\n\n  var _super = _createSuper(NullPresenceChannel);\n\n  function NullPresenceChannel() {\n    _classCallCheck(this, NullPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      return this;\n    }\n    /**\r\n     * Trigger client event on the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPresenceChannel;\n}(NullChannel);\n\nvar Connector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Connector(options) {\n    _classCallCheck(this, Connector);\n\n    /**\r\n     * Default connector options.\r\n     */\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      userAuthentication: {\n        endpoint: '/broadcasting/user-auth',\n        headers: {}\n      },\n      broadcaster: 'pusher',\n      csrfToken: null,\n      bearerToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\r\n   * Merge the custom options with the defaults.\r\n   */\n\n\n  _createClass(Connector, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n      var token = this.csrfToken();\n\n      if (token) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = token;\n        this.options.userAuthentication.headers['X-CSRF-TOKEN'] = token;\n      }\n\n      token = this.options.bearerToken;\n\n      if (token) {\n        this.options.auth.headers['Authorization'] = 'Bearer ' + token;\n        this.options.userAuthentication.headers['Authorization'] = 'Bearer ' + token;\n      }\n\n      return options;\n    }\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\n\n  }, {\n    key: \"csrfToken\",\n    value: function csrfToken() {\n      var selector;\n\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n\n      return null;\n    }\n  }]);\n\n  return Connector;\n}();\n\n/**\r\n * This class creates a connector to Pusher.\r\n */\n\nvar PusherConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(PusherConnector, _Connector);\n\n  var _super = _createSuper(PusherConnector);\n\n  function PusherConnector() {\n    var _this;\n\n    _classCallCheck(this, PusherConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Pusher connection.\r\n   */\n\n\n  _createClass(PusherConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\r\n     * Sign in the user via Pusher user authentication (https://pusher.com/docs/channels/using_channels/user-authentication/).\r\n     */\n\n  }, {\n    key: \"signin\",\n    value: function signin() {\n      this.pusher.signin();\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      if (!this.channels['private-encrypted-' + name]) {\n        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);\n      }\n\n      return this.channels['private-encrypted-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'private-encrypted-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\r\n     * Disconnect Pusher connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return PusherConnector;\n}(Connector);\n\n/**\r\n * This class creates a connnector to a Socket.io server.\r\n */\n\nvar SocketIoConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(SocketIoConnector, _Connector);\n\n  var _super = _createSuper(SocketIoConnector);\n\n  function SocketIoConnector() {\n    var _this;\n\n    _classCallCheck(this, SocketIoConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n\n  _createClass(SocketIoConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      this.socket.on('reconnect', function () {\n        Object.values(_this2.channels).forEach(function (channel) {\n          channel.subscribe();\n        });\n      });\n      return this.socket;\n    }\n    /**\r\n     * Get socket.io module from global scope or options.\r\n     */\n\n  }, {\n    key: \"getSocketIO\",\n    value: function getSocketIO() {\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this3 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this3.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\r\n     * Disconnect Socketio connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n\n  return SocketIoConnector;\n}(Connector);\n\n/**\r\n * This class creates a null connector.\r\n */\n\nvar NullConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(NullConnector, _Connector);\n\n  var _super = _createSuper(NullConnector);\n\n  function NullConnector() {\n    var _this;\n\n    _classCallCheck(this, NullConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh connection.\r\n   */\n\n\n  _createClass(NullConnector, [{\n    key: \"connect\",\n    value: function connect() {//\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {//\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {//\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\r\n     * Disconnect the connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {//\n    }\n  }]);\n\n  return NullConnector;\n}(Connector);\n\n/**\r\n * This class is the primary API for interacting with broadcasting.\r\n */\n\nvar Echo = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Echo(options) {\n    _classCallCheck(this, Echo);\n\n    this.options = options;\n    this.connect();\n\n    if (!this.options.withoutInterceptors) {\n      this.registerInterceptors();\n    }\n  }\n  /**\r\n   * Get a channel instance by name.\r\n   */\n\n\n  _createClass(Echo, [{\n    key: \"channel\",\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\r\n     * Create a new connection.\r\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      } else if (typeof this.options.broadcaster == 'function') {\n        this.connector = new this.options.broadcaster(this.options);\n      }\n    }\n    /**\r\n     * Disconnect from the Echo server.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"private\",\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivate\",\n    value: function encryptedPrivate(channel) {\n      return this.connector.encryptedPrivateChannel(channel);\n    }\n    /**\r\n     * Get the Socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\r\n     * Register 3rd party request interceptiors. These are used to automatically\r\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\r\n     */\n\n  }, {\n    key: \"registerInterceptors\",\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n\n      if ((typeof Turbo === \"undefined\" ? \"undefined\" : _typeof(Turbo)) === 'object') {\n        this.registerTurboRequestInterceptor();\n      }\n    }\n    /**\r\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerVueRequestInterceptor\",\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n\n        next();\n      });\n    }\n    /**\r\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerAxiosRequestInterceptor\",\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n\n        return config;\n      });\n    }\n    /**\r\n     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerjQueryAjaxSetup\",\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (_this3.socketId()) {\n            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n          }\n        });\n      }\n    }\n    /**\r\n     * Register the Turbo Request interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerTurboRequestInterceptor\",\n    value: function registerTurboRequestInterceptor() {\n      var _this4 = this;\n\n      document.addEventListener('turbo:before-fetch-request', function (event) {\n        event.detail.fetchOptions.headers['X-Socket-Id'] = _this4.socketId();\n      });\n    }\n  }]);\n\n  return Echo;\n}();\n\nexport { Channel, Echo as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}